// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStudentOperationsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnCheckQualification;

  @NonNull
  public final Button btnCommentRateEvent;

  @NonNull
  public final Button btnGenerateComplaint;

  @NonNull
  public final Button btnRSVPforEvent;

  @NonNull
  public final Button btnStudentLogOut;

  @NonNull
  public final Button btnViewAnnouncementEvent;

  @NonNull
  public final RelativeLayout loginBackground;

  @NonNull
  public final TextView tvStudentOperations;

  private ActivityStudentOperationsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnCheckQualification, @NonNull Button btnCommentRateEvent,
      @NonNull Button btnGenerateComplaint, @NonNull Button btnRSVPforEvent,
      @NonNull Button btnStudentLogOut, @NonNull Button btnViewAnnouncementEvent,
      @NonNull RelativeLayout loginBackground, @NonNull TextView tvStudentOperations) {
    this.rootView = rootView;
    this.btnCheckQualification = btnCheckQualification;
    this.btnCommentRateEvent = btnCommentRateEvent;
    this.btnGenerateComplaint = btnGenerateComplaint;
    this.btnRSVPforEvent = btnRSVPforEvent;
    this.btnStudentLogOut = btnStudentLogOut;
    this.btnViewAnnouncementEvent = btnViewAnnouncementEvent;
    this.loginBackground = loginBackground;
    this.tvStudentOperations = tvStudentOperations;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStudentOperationsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStudentOperationsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_student_operations, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStudentOperationsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCheckQualification;
      Button btnCheckQualification = ViewBindings.findChildViewById(rootView, id);
      if (btnCheckQualification == null) {
        break missingId;
      }

      id = R.id.btnCommentRateEvent;
      Button btnCommentRateEvent = ViewBindings.findChildViewById(rootView, id);
      if (btnCommentRateEvent == null) {
        break missingId;
      }

      id = R.id.btnGenerateComplaint;
      Button btnGenerateComplaint = ViewBindings.findChildViewById(rootView, id);
      if (btnGenerateComplaint == null) {
        break missingId;
      }

      id = R.id.btnRSVPforEvent;
      Button btnRSVPforEvent = ViewBindings.findChildViewById(rootView, id);
      if (btnRSVPforEvent == null) {
        break missingId;
      }

      id = R.id.btnStudentLogOut;
      Button btnStudentLogOut = ViewBindings.findChildViewById(rootView, id);
      if (btnStudentLogOut == null) {
        break missingId;
      }

      id = R.id.btnViewAnnouncementEvent;
      Button btnViewAnnouncementEvent = ViewBindings.findChildViewById(rootView, id);
      if (btnViewAnnouncementEvent == null) {
        break missingId;
      }

      id = R.id.login_background;
      RelativeLayout loginBackground = ViewBindings.findChildViewById(rootView, id);
      if (loginBackground == null) {
        break missingId;
      }

      id = R.id.tvStudentOperations;
      TextView tvStudentOperations = ViewBindings.findChildViewById(rootView, id);
      if (tvStudentOperations == null) {
        break missingId;
      }

      return new ActivityStudentOperationsBinding((ConstraintLayout) rootView,
          btnCheckQualification, btnCommentRateEvent, btnGenerateComplaint, btnRSVPforEvent,
          btnStudentLogOut, btnViewAnnouncementEvent, loginBackground, tvStudentOperations);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
