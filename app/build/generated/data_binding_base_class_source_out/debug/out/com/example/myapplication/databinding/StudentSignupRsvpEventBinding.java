// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class StudentSignupRsvpEventBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnStudentRSVPEvent;

  @NonNull
  public final Button btnStudentRSVPEventBack;

  @NonNull
  public final RelativeLayout loginBackground;

  @NonNull
  public final TextView rsvpEventContent;

  @NonNull
  public final TextView rsvpEventContentShow;

  @NonNull
  public final TextView rsvpEventName;

  @NonNull
  public final TextView rsvpEventNameShow;

  @NonNull
  public final TextView rsvpEventOccupancy;

  @NonNull
  public final TextView rsvpEventOccupancyShow;

  private StudentSignupRsvpEventBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnStudentRSVPEvent, @NonNull Button btnStudentRSVPEventBack,
      @NonNull RelativeLayout loginBackground, @NonNull TextView rsvpEventContent,
      @NonNull TextView rsvpEventContentShow, @NonNull TextView rsvpEventName,
      @NonNull TextView rsvpEventNameShow, @NonNull TextView rsvpEventOccupancy,
      @NonNull TextView rsvpEventOccupancyShow) {
    this.rootView = rootView;
    this.btnStudentRSVPEvent = btnStudentRSVPEvent;
    this.btnStudentRSVPEventBack = btnStudentRSVPEventBack;
    this.loginBackground = loginBackground;
    this.rsvpEventContent = rsvpEventContent;
    this.rsvpEventContentShow = rsvpEventContentShow;
    this.rsvpEventName = rsvpEventName;
    this.rsvpEventNameShow = rsvpEventNameShow;
    this.rsvpEventOccupancy = rsvpEventOccupancy;
    this.rsvpEventOccupancyShow = rsvpEventOccupancyShow;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static StudentSignupRsvpEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static StudentSignupRsvpEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.student_signup_rsvp_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static StudentSignupRsvpEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnStudentRSVPEvent;
      Button btnStudentRSVPEvent = ViewBindings.findChildViewById(rootView, id);
      if (btnStudentRSVPEvent == null) {
        break missingId;
      }

      id = R.id.btnStudentRSVPEventBack;
      Button btnStudentRSVPEventBack = ViewBindings.findChildViewById(rootView, id);
      if (btnStudentRSVPEventBack == null) {
        break missingId;
      }

      id = R.id.login_background;
      RelativeLayout loginBackground = ViewBindings.findChildViewById(rootView, id);
      if (loginBackground == null) {
        break missingId;
      }

      id = R.id.rsvpEventContent;
      TextView rsvpEventContent = ViewBindings.findChildViewById(rootView, id);
      if (rsvpEventContent == null) {
        break missingId;
      }

      id = R.id.rsvpEventContentShow;
      TextView rsvpEventContentShow = ViewBindings.findChildViewById(rootView, id);
      if (rsvpEventContentShow == null) {
        break missingId;
      }

      id = R.id.rsvpEventName;
      TextView rsvpEventName = ViewBindings.findChildViewById(rootView, id);
      if (rsvpEventName == null) {
        break missingId;
      }

      id = R.id.rsvpEventNameShow;
      TextView rsvpEventNameShow = ViewBindings.findChildViewById(rootView, id);
      if (rsvpEventNameShow == null) {
        break missingId;
      }

      id = R.id.rsvpEventOccupancy;
      TextView rsvpEventOccupancy = ViewBindings.findChildViewById(rootView, id);
      if (rsvpEventOccupancy == null) {
        break missingId;
      }

      id = R.id.rsvpEventOccupancyShow;
      TextView rsvpEventOccupancyShow = ViewBindings.findChildViewById(rootView, id);
      if (rsvpEventOccupancyShow == null) {
        break missingId;
      }

      return new StudentSignupRsvpEventBinding((ConstraintLayout) rootView, btnStudentRSVPEvent,
          btnStudentRSVPEventBack, loginBackground, rsvpEventContent, rsvpEventContentShow,
          rsvpEventName, rsvpEventNameShow, rsvpEventOccupancy, rsvpEventOccupancyShow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
