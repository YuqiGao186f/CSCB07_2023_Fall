// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class StudentViewAnnouncementEventBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnStudentViewAnnouncementEventBack;

  @NonNull
  public final TextView studentSelectAnnouncementView;

  @NonNull
  public final ListView studentSelectAnnouncementViewList;

  @NonNull
  public final TextView studentSelectEventView;

  @NonNull
  public final ListView studentSelectEventViewList;

  private StudentViewAnnouncementEventBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnStudentViewAnnouncementEventBack,
      @NonNull TextView studentSelectAnnouncementView,
      @NonNull ListView studentSelectAnnouncementViewList, @NonNull TextView studentSelectEventView,
      @NonNull ListView studentSelectEventViewList) {
    this.rootView = rootView;
    this.btnStudentViewAnnouncementEventBack = btnStudentViewAnnouncementEventBack;
    this.studentSelectAnnouncementView = studentSelectAnnouncementView;
    this.studentSelectAnnouncementViewList = studentSelectAnnouncementViewList;
    this.studentSelectEventView = studentSelectEventView;
    this.studentSelectEventViewList = studentSelectEventViewList;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static StudentViewAnnouncementEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static StudentViewAnnouncementEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.student_view_announcement_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static StudentViewAnnouncementEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnStudentViewAnnouncementEventBack;
      Button btnStudentViewAnnouncementEventBack = ViewBindings.findChildViewById(rootView, id);
      if (btnStudentViewAnnouncementEventBack == null) {
        break missingId;
      }

      id = R.id.studentSelectAnnouncementView;
      TextView studentSelectAnnouncementView = ViewBindings.findChildViewById(rootView, id);
      if (studentSelectAnnouncementView == null) {
        break missingId;
      }

      id = R.id.studentSelectAnnouncementViewList;
      ListView studentSelectAnnouncementViewList = ViewBindings.findChildViewById(rootView, id);
      if (studentSelectAnnouncementViewList == null) {
        break missingId;
      }

      id = R.id.studentSelectEventView;
      TextView studentSelectEventView = ViewBindings.findChildViewById(rootView, id);
      if (studentSelectEventView == null) {
        break missingId;
      }

      id = R.id.studentSelectEventViewList;
      ListView studentSelectEventViewList = ViewBindings.findChildViewById(rootView, id);
      if (studentSelectEventViewList == null) {
        break missingId;
      }

      return new StudentViewAnnouncementEventBinding((ConstraintLayout) rootView,
          btnStudentViewAnnouncementEventBack, studentSelectAnnouncementView,
          studentSelectAnnouncementViewList, studentSelectEventView, studentSelectEventViewList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
