// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdminGenerateEventBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText EventContent;

  @NonNull
  public final EditText EventName;

  @NonNull
  public final EditText EventOccupancy;

  @NonNull
  public final TextView GenerateAnEvent;

  @NonNull
  public final Button btnAdminGenerateEvent;

  @NonNull
  public final Button btnAdminGenerateEventBack;

  @NonNull
  public final TextView eventContent;

  @NonNull
  public final TextView eventName;

  @NonNull
  public final TextView eventOccupancy;

  @NonNull
  public final RelativeLayout loginBackground;

  private AdminGenerateEventBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText EventContent, @NonNull EditText EventName, @NonNull EditText EventOccupancy,
      @NonNull TextView GenerateAnEvent, @NonNull Button btnAdminGenerateEvent,
      @NonNull Button btnAdminGenerateEventBack, @NonNull TextView eventContent,
      @NonNull TextView eventName, @NonNull TextView eventOccupancy,
      @NonNull RelativeLayout loginBackground) {
    this.rootView = rootView;
    this.EventContent = EventContent;
    this.EventName = EventName;
    this.EventOccupancy = EventOccupancy;
    this.GenerateAnEvent = GenerateAnEvent;
    this.btnAdminGenerateEvent = btnAdminGenerateEvent;
    this.btnAdminGenerateEventBack = btnAdminGenerateEventBack;
    this.eventContent = eventContent;
    this.eventName = eventName;
    this.eventOccupancy = eventOccupancy;
    this.loginBackground = loginBackground;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdminGenerateEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdminGenerateEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.admin_generate_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdminGenerateEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.EventContent;
      EditText EventContent = ViewBindings.findChildViewById(rootView, id);
      if (EventContent == null) {
        break missingId;
      }

      id = R.id.EventName;
      EditText EventName = ViewBindings.findChildViewById(rootView, id);
      if (EventName == null) {
        break missingId;
      }

      id = R.id.EventOccupancy;
      EditText EventOccupancy = ViewBindings.findChildViewById(rootView, id);
      if (EventOccupancy == null) {
        break missingId;
      }

      id = R.id.GenerateAnEvent;
      TextView GenerateAnEvent = ViewBindings.findChildViewById(rootView, id);
      if (GenerateAnEvent == null) {
        break missingId;
      }

      id = R.id.btnAdminGenerateEvent;
      Button btnAdminGenerateEvent = ViewBindings.findChildViewById(rootView, id);
      if (btnAdminGenerateEvent == null) {
        break missingId;
      }

      id = R.id.btnAdminGenerateEventBack;
      Button btnAdminGenerateEventBack = ViewBindings.findChildViewById(rootView, id);
      if (btnAdminGenerateEventBack == null) {
        break missingId;
      }

      id = R.id.eventContent;
      TextView eventContent = ViewBindings.findChildViewById(rootView, id);
      if (eventContent == null) {
        break missingId;
      }

      id = R.id.eventName;
      TextView eventName = ViewBindings.findChildViewById(rootView, id);
      if (eventName == null) {
        break missingId;
      }

      id = R.id.eventOccupancy;
      TextView eventOccupancy = ViewBindings.findChildViewById(rootView, id);
      if (eventOccupancy == null) {
        break missingId;
      }

      id = R.id.login_background;
      RelativeLayout loginBackground = ViewBindings.findChildViewById(rootView, id);
      if (loginBackground == null) {
        break missingId;
      }

      return new AdminGenerateEventBinding((ConstraintLayout) rootView, EventContent, EventName,
          EventOccupancy, GenerateAnEvent, btnAdminGenerateEvent, btnAdminGenerateEventBack,
          eventContent, eventName, eventOccupancy, loginBackground);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
